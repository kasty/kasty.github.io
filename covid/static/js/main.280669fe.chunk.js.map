{"version":3,"sources":["components/Header.tsx","config.ts","components/UserSelector.tsx","components/ReasonSelector.tsx","js/dom-utils.js","js/util.js","js/pdf-util.js","certificate.pdf","components/Form.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","config","reasonsList","travail","title","emoji","famille","achats","sport_animaux","sante","handicap","convocation","missions","enfants","users","robert","profile","firstname","lastname","birthday","placeofbirth","address","zipcode","city","settings","choices","defaultChoice","janine","defaultUser","UserSelector","currentUser","onChange","id","name","value","Object","keys","map","user","key","upcaseUser","charAt","toUpperCase","slice","ReasonSelector","currentReason","reasons","reason","includes","type","checked","htmlFor","plainAttributes","downloadBlob","blob","fileName","link","tag","attrs","el","document","createElement","forEach","plainAttr","setAttribute","assign","url","URL","createObjectURL","href","download","body","appendChild","click","generateQR","text","QRCode","toDataURL","errorCorrectionLevel","quality","margin","ys","generatePdf","pdfBase","a","creationInstant","Date","creationDate","toLocaleDateString","creationHour","toLocaleTimeString","hour","minute","replace","datesortie","heuresortie","data","join","fetch","then","res","arrayBuffer","existingPdfBytes","PDFDocument","load","pdfDoc","setTitle","setSubject","setKeywords","setProducer","setCreator","setAuthor","page1","getPages","embedFont","StandardFonts","Helvetica","font","drawText","x","y","size","split","locationSize","getIdealFontSize","alert","generatedQR","embedPng","qrImage","drawImage","getWidth","width","height","addPage","page2","getHeight","save","pdfBytes","Blob","maxWidth","minSize","defaultSize","currentSize","textWidth","widthOfTextAtSize","Form","generate","formInputs","userData","now","getDate","getMonth","getFullYear","getHours","getMinutes","pdfBlob","React","useState","location","search","setUser","setReason","setUserData","useEffect","e","target","currentTarget","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.280669fe.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => (\n  <h1 className=\"text-center mb-4\">Générateur d'autorisation <span className=\"badge badge-warning\">COVID-19</span></h1>\n)\n\nexport default Header;","import { configType } from './config/config';\n\nconst config: configType = {\n  reasonsList: {\n    travail: {\n      title: \"au boulot\",\n      emoji: \"🖥\"\n    },\n    famille: {\n      title: \"m'occuper de la famille\",\n      emoji: \"💪🏼\"\n    },\n    achats: {\n      title: \"faire les courses\",\n      emoji: \"🛒\"\n    },\n    sport_animaux: {\n      title: \"prendre l'air\",\n      emoji: \" ☔️\"\n    },\n    sante: {\n      title: \"chez le doc (glups)\",\n      emoji: \"🤒\"\n    },\n    handicap: {\n      title: \"me déplacer en situation de handicap\",\n      emoji: \"🦽\"\n    },\n    convocation: {\n      title: \"à une convocation\",\n      emoji: \"📄\"\n    },\n    missions: {\n      title: \"participer à une mission d'intérêt général\",\n      emoji: \"🔧\"\n    },\n    enfants: {\n      title: \"chercher les enfants à l'école\",\n      emoji: \"🧸\"\n    },\n  },\n  users: {\n    robert: {\n      profile: {\n        firstname: 'Robert',\n        lastname: 'Tudor',\n        birthday: '24/06/1978',\n        placeofbirth: 'Nantes',\n        address: '35 rue de l\\'épée',\n        zipcode: '44000',\n        city: 'Nantes',\n        emoji: '🐼'\n      },\n      settings: {\n        choices: [\n          'famille',\n          'achats',\n          'sport_animaux',\n          'sante',\n          'handicap'\n        ],\n        defaultChoice: 'sport_animaux',\n      },\n    },\n    janine: {\n      profile: {\n        firstname: 'Janine',\n        lastname: 'Tudor',\n        birthday: '01/05/1975',\n        placeofbirth: 'Biarritz',\n        address: '35 rue de l\\'épée',\n        zipcode: '44000',\n        city: 'Nantes',\n        emoji: '🐙'\n      },\n      settings: {\n        choices: [\n          'travail',\n          'famille',\n          'achats',\n          'sport_animaux',\n          'sante',\n          'missions'\n        ],\n        defaultChoice: 'travail',\n      },\n    },\n  },\n  defaultUser: \"janine\"\n};\n\nexport default config;\n","import React, {\n  FC, \n} from 'react';\nimport config from '../config';\n\ninterface UserSelectorProps {\n  currentUser: string;\n  onChange?: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n}\n\nconst UserSelector: FC<UserSelectorProps> = ({\n  currentUser = '',\n  onChange,\n}: UserSelectorProps) => {\n    return (\n      <h2 className=\"mb-4\">Je suis \n      <select id=\"user\" name=\"user\" className=\"custom-select custom-select-lg\" value={currentUser} onChange={onChange}>\n        <option value=\"\">...</option>\n        {\n          Object.keys(config.users).map((user, key) => {\n            const upcaseUser = user.charAt(0).toUpperCase() + user.slice(1);\n            return (\n              <option value={user}>{upcaseUser} {config.users[user].profile.emoji}</option>\n            );\n          })\n        }\n        </select>\n      </h2>\n    );\n}\n\nexport default UserSelector;","import React, {\n  FC, \n} from 'react';\nimport config from '../config';\n\ninterface ReasonSelectorProps {\n  currentReason: string;\n  reasons: string[] | null;\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nconst ReasonSelector: FC<ReasonSelectorProps> = ({\n  currentReason,\n  onChange,\n  reasons,\n}: ReasonSelectorProps) => {\n    return (\n      <div>\n        <h2>Je vais ...</h2>\n        <div className=\"custom-control custom-radio\">\n          {\n          Object.keys(config.reasonsList).map((reason) => {\n            if((reasons && reasons?.includes(reason)) || reasons == null) {\n              return (\n                <p key={reason} id={`reason-${reason}`} className=\"choice mt-3 mb-3\">\n                  <input type=\"radio\" name=\"field-reason\" id={reason} value={reason} className=\"custom-control-input\" checked={ currentReason === reason} onChange={onChange} />\n                  <label htmlFor={reason} className=\"custom-control-label\">{config.reasonsList[reason as keyof typeof config.reasonsList]?.title} {config.reasonsList[reason as keyof typeof config.reasonsList]?.emoji}</label>\n                </p>\n              );\n            } else {\n              return null;\n            }\n          })\n          }\n      </div>\n    </div>\n    );\n}\n\nexport default ReasonSelector;\n","export const $ = (...args) => document.querySelector(...args)\nexport const $$ = (...args) => [...document.querySelectorAll(...args)]\n\nconst plainAttributes = [\n  'for',\n  'inputmode',\n  'minlength',\n  'maxlength',\n  'min',\n  'max',\n  'pattern',\n]\n\nexport const createElement = (tag, attrs) => {\n  const el = document.createElement(tag)\n  plainAttributes.forEach(plainAttr => {\n    if (attrs && plainAttr in attrs && attrs[plainAttr]) {\n      el.setAttribute(plainAttr, attrs[plainAttr])\n    }\n    if (attrs) {\n      delete attrs[plainAttr]\n    }\n  })\n  Object.assign(el, attrs)\n  return el\n}\n\nexport const appendTo = el => domNodes => {\n  if (domNodes[Symbol.iterator]) {\n    el.append(...domNodes)\n    return\n  }\n  el.append(domNodes)\n}\n\nexport function downloadBlob (blob, fileName) {\n  const link = createElement('a')\n  const url = URL.createObjectURL(blob)\n  link.href = url\n  link.download = fileName\n  document.body.appendChild(link)\n  link.click()\n}\n","import QRCode from 'qrcode'\n\nexport function generateQR (text) {\n  const opts = {\n    errorCorrectionLevel: 'M',\n    type: 'image/png',\n    quality: 0.92,\n    margin: 1,\n  }\n  return QRCode.toDataURL(text, opts)\n}\n\nexport function pad2Zero (str) {\n  return String(str).padStart(2, '0')\n}\n\nexport function getFormattedDate (date) {\n  const year = date.getFullYear()\n  const month = pad2Zero(date.getMonth() + 1) // Les mois commencent à 0\n  const day = pad2Zero(date.getDate())\n  return `${year}-${month}-${day}`\n}\n\nexport function addSlash (str) {\n  return str\n    .replace(/^(\\d{2})$/g, '$1/')\n    .replace(/^(\\d{2})\\/(\\d{2})$/g, '$1/$2/')\n    .replace(/\\/\\//g, '/')\n}\n\nexport function addVersion (version) {\n  document.getElementById(\n    'version',\n  ).innerHTML = `${new Date().getFullYear()} - ${version}`\n}\n","import { generateQR } from './util'\nimport { PDFDocument, StandardFonts } from 'pdf-lib'\n\nconst ys = {\n  travail: 578,\n  achats: 533,\n  sante: 477,\n  famille: 435,\n  handicap: 396,\n  sport_animaux: 358,\n  convocation: 295,\n  missions: 255,\n  enfants: 211,\n}\n\nexport async function generatePdf (profile, reasons, pdfBase) {\n  const creationInstant = new Date()\n  const creationDate = creationInstant.toLocaleDateString('fr-FR')\n  const creationHour = creationInstant\n    .toLocaleTimeString('fr-FR', { hour: '2-digit', minute: '2-digit' })\n    .replace(':', 'h')\n\n  const {\n    lastname,\n    firstname,\n    birthday,\n    placeofbirth,\n    address,\n    zipcode,\n    city,\n    datesortie,\n    heuresortie,\n  } = profile\n\n  const data = [\n    `Cree le: ${creationDate} a ${creationHour}`,\n    `Nom: ${lastname}`,\n    `Prenom: ${firstname}`,\n    `Naissance: ${birthday} a ${placeofbirth}`,\n    `Adresse: ${address} ${zipcode} ${city}`,\n    `Sortie: ${datesortie} a ${heuresortie}`,\n    `Motifs: ${reasons}`,\n  ].join(';\\n ')\n\n  const existingPdfBytes = await fetch(pdfBase).then((res) => res.arrayBuffer())\n\n  const pdfDoc = await PDFDocument.load(existingPdfBytes)\n\n  // set pdf metadata\n  pdfDoc.setTitle('COVID-19 - Déclaration de déplacement')\n  pdfDoc.setSubject('Attestation de déplacement dérogatoire')\n  pdfDoc.setKeywords([\n    'covid19',\n    'covid-19',\n    'attestation',\n    'déclaration',\n    'déplacement',\n    'officielle',\n    'gouvernement',\n  ])\n  pdfDoc.setProducer('DNUM/SDIT')\n  pdfDoc.setCreator('')\n  pdfDoc.setAuthor(\"Ministère de l'intérieur\")\n\n  const page1 = pdfDoc.getPages()[0]\n\n  const font = await pdfDoc.embedFont(StandardFonts.Helvetica)\n  const drawText = (text, x, y, size = 11) => {\n    page1.drawText(text, { x, y, size, font })\n  }\n\n  drawText(`${firstname} ${lastname}`, 119, 696)\n  drawText(birthday, 119, 674)\n  drawText(placeofbirth, 297, 674)\n  drawText(`${address} ${zipcode} ${city}`, 133, 652)\n\n  reasons\n    .split(', ')\n    .forEach(reason => {\n      drawText('x', 78, ys[reason], 18)\n    })\n\n  let locationSize = getIdealFontSize(font, profile.city, 83, 7, 11)\n\n  if (!locationSize) {\n    alert(\n      'Le nom de la ville risque de ne pas être affiché correctement en raison de sa longueur. ' +\n        'Essayez d\\'utiliser des abréviations (\"Saint\" en \"St.\" par exemple) quand cela est possible.',\n    )\n    locationSize = 7\n  }\n\n  drawText(profile.city, 105, 177, locationSize)\n  drawText(`${profile.datesortie}`, 91, 153, 11)\n  drawText(`${profile.heuresortie}`, 264, 153, 11)\n\n  // const shortCreationDate = `${creationDate.split('/')[0]}/${\n  //   creationDate.split('/')[1]\n  // }`\n  // drawText(shortCreationDate, 314, 189, locationSize)\n\n  // // Date création\n  // drawText('Date de création:', 479, 130, 6)\n  // drawText(`${creationDate} à ${creationHour}`, 470, 124, 6)\n\n  const generatedQR = await generateQR(data)\n\n  const qrImage = await pdfDoc.embedPng(generatedQR)\n\n  page1.drawImage(qrImage, {\n    x: page1.getWidth() - 156,\n    y: 100,\n    width: 92,\n    height: 92,\n  })\n\n  pdfDoc.addPage()\n  const page2 = pdfDoc.getPages()[1]\n  page2.drawImage(qrImage, {\n    x: 50,\n    y: page2.getHeight() - 350,\n    width: 300,\n    height: 300,\n  })\n\n  const pdfBytes = await pdfDoc.save()\n\n  return new Blob([pdfBytes], { type: 'application/pdf' })\n}\n\nfunction getIdealFontSize (font, text, maxWidth, minSize, defaultSize) {\n  let currentSize = defaultSize\n  let textWidth = font.widthOfTextAtSize(text, defaultSize)\n\n  while (textWidth > maxWidth && currentSize > minSize) {\n    textWidth = font.widthOfTextAtSize(text, --currentSize)\n  }\n\n  return textWidth > maxWidth ? null : currentSize\n}\n","export default __webpack_public_path__ + \"static/media/certificate.eeff7ddd.pdf\";","import React, { useEffect } from 'react';\nimport UserSelector from './UserSelector';\nimport ReasonSelector from './ReasonSelector';\nimport { downloadBlob } from '../js/dom-utils';\nimport { generatePdf } from '../js/pdf-util';\nimport config from '../config';\nimport pdfBase from '../certificate.pdf';\n\nconst Form = () => {\n    const getDefaultUser = () => (\n      document.location.search.replace('?p=', '') \n      || (\n          (config && config.defaultUser && config.users && config.users[config.defaultUser])\n          ? config.defaultUser\n          : ''\n         )\n    )\n    const generate = async () => {\n      const formInputs = userData.profile;\n      // set current date and hour\n      const now = new Date();\n      formInputs.datesortie = `${now.getDate()}/${now.getMonth() + 1}/${now.getFullYear()}`;\n      formInputs.heuresortie = `${now.getHours()}:${now.getMinutes()}`;\n      // generate pdf\n      const pdfBlob = await generatePdf(formInputs, reason, pdfBase);\n      const creationDate = now.toLocaleDateString('fr-CA');\n      const creationHour = now\n        .toLocaleTimeString('fr-FR', { hour: '2-digit', minute: '2-digit' })\n        .replace(':', '-');\n      // download pdf\n      downloadBlob(pdfBlob, `attestation-${creationDate}_${creationHour}.pdf`);\n    }\n    const handleUserSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\n      setUser(e.target.value);\n    }\n    const handleReasonSelect = (e: React.ChangeEvent<HTMLInputElement>) => {\n      setReason(e.currentTarget.value);\n    }\n    const [user, setUser] = React.useState<string>(getDefaultUser());\n    const [reason, setReason] = React.useState<string>('');\n    const [userData, setUserData] = React.useState<any>({});\n\n    useEffect(() => {\n      // update user data\n      if(user !== '') {\n        const userData: any = config.users[user as keyof typeof config.users];\n        setUserData(config.users[user as keyof typeof config.users]);\n        setReason(userData.settings.defaultChoice);\n      } else {\n        setUserData({});\n        setReason('')\n      }\n    }, [user]);\n\n    return (\n      <form>\n        <UserSelector currentUser={user} onChange={handleUserSelect} />\n        <ReasonSelector currentReason={reason} reasons={(userData && userData.settings && userData.settings.choices) ? userData.settings.choices : null} onChange={handleReasonSelect} />\n        <button type=\"button\" className=\"btn btn-info btn-lg btn-block\" id=\"generate-btn\" onClick={generate}>\n          Générer\n        </button>\n      </form>\n    );\n}\n\nexport default Form;","import 'bootstrap/dist/css/bootstrap.min.css'\nimport './css/App.css';\n\nimport React from 'react';\nimport Header from './components/Header';\nimport Form from './components/Form';\n\nfunction App() {\n  return (\n    <div id=\"app\" className=\"App container-md\">\n      <div className=\"mx-auto card\" id=\"main\">\n          <div className=\"card-body text-center\">\n            <Header />\n            <Form />\n          </div>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}